# This is a basic workflow to help you get started with Actions

name: Build_Image

env:
  VERSION: ${{ github.ref_name }}
  RELEASE: 37
  UPDATE: 1.7
  BASE_OS_IMAGE: base-os.qcow2

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    tags:
    - '*'
  
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: [self-hosted, Linux]

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Runs a single command using the runners shell
      - name: Install prerequies
        run: |
          sudo apt-get update
          sudo apt install libguestfs-tools wget linux-image-generic -y
      # Runs a set of commands using the runners shell
      - name: Download base image from Fedora Servers
        run: |
          sudo wget https://download.fedoraproject.org/pub/fedora/linux/releases/${{ env.RELEASE }}/Cloud/x86_64/images/Fedora-Cloud-Base-${{ env.RELEASE }}-${{ env.UPDATE }}.x86_64.qcow2 -O $BASE_OS_IMAGE
      - name: Making some changes on base image
        run: |
          sudo virt-customize -a $BASE_OS_IMAGE --upload config/network_manager.patch:/tmp/network_manager.patch
          sudo virt-customize -a $BASE_OS_IMAGE --install 'patch'
          sudo virt-customize -a $BASE_OS_IMAGE --run-command 'patch /usr/lib/python3.11/site-packages/cloudinit/net/network_manager.py /tmp/network_manager.patch'
          sudo virt-customize -a $BASE_OS_IMAGE --uninstall 'patch'
          sudo virt-customize -a $BASE_OS_IMAGE --delete '/tmp/network_manager.patch'
      - name: Sysprep & Sparsify image
        run: |
          sudo virt-sysprep -a $BASE_OS_IMAGE
          sudo virt-sparsify --convert qcow2 --compress $BASE_OS_IMAGE Fedora-Cloud-Base-${{ env.RELEASE }}-${{ env.UPDATE }}.x86_64.qcow2
          sudo md5sum Fedora-Cloud-Base-${{ env.RELEASE }}-${{ env.UPDATE }}.x86_64.qcow2> md5.txt
      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          name: Fedora Cloud ${{ env.VERSION }} update ${{ env.UPDATE }}
          draft: false
          prerelease: false

      - name: Upload image to release asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: Fedora-Cloud-Base-${{ env.RELEASE }}-${{ env.UPDATE }}.x86_64.qcow2
          asset_name: Fedora-Cloud-Base-${{ env.RELEASE }}-${{ env.UPDATE }}.x86_64.qcow2
          asset_content_type: application/octet-stream

      - name: Add md5.txt file
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: md5.txt
          asset_name: md5.txt
          asset_content_type: text/plain
